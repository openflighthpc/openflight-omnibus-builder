if [ ! -f "$flight_ROOT/opt/action-api/config/nodes.yaml" ]; then
  # Create the new empty nodes config if the old one is omitted
  # NOTE: It is assumed the application is correctly configured to use
  #       the old path if it exists
  touch "$flight_ROOT/opt/action-api/etc/nodes.yaml"
fi

# Run the configuration
# Migrate the existing jwt_secret to the new config file
"$flight_ROOT"/bin/ruby <<EOF
require 'yaml'
require 'fileutils'

OLD_CONFIG = "$flight_ROOT/opt/action-api/config/application.yaml"
JWT_CONFIG = "$flight_ROOT/opt/action-api/etc/action-api/shared-secret.conf"

REL_NODES  = "config/nodes.yaml"
OLD_NODES  = "$flight_ROOT/opt/action-api/#{REL_NODES}"
NEW_NODES  = "$flight_ROOT/opt/action-api/etc/nodes.yaml"

# Attempt to load the yaml
exit unless File.exists? OLD_CONFIG
yaml = File.read OLD_CONFIG
data = YAML.load(yaml, symbolize_names: true).to_h

# Migrate the secret to the new file
if data.key? :jwt_secret
  secret = data.delete :jwt_secret
  FileUtils.mkdir_p File.dirname(JWT_CONFIG)
  File.write JWT_CONFIG, secret
end

# Migrate the nodes config
if data[:nodes_config_path] == REL_NODES
  FileUtils.mv OLD_NODES, NEW_NODES, force: true
  FileUtils.ln_s "../etc/nodes.yaml", OLD_NODES
  data.delete(:nodes_config_path)
end

# Rewrite the old config
File.write OLD_CONFIG, YAML.dump(data)
EOF

# Ensure the new nodes path exists
touch "$flight_ROOT/opt/action-api/etc/nodes.yaml"
