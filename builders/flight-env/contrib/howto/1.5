# Flight ENV(1) - Manage and access HPC environment

## Overview

~~~
$ flight env --help
  NAME:

    flight env

  DESCRIPTION:

    Manage and access HPC application environments.

  COMMANDS:

    activate     Activate an application environment
    avail        Show available application environment types
    create       Create a new application environment
    deactivate   Deactivate the current application environment
    help         Display global or [command] help documentation
    info         Show information about an application environment type
    list         List configured application environments
    purge        Purge an existing application environment
    set-default  Set the default application environment
    show-active  Show currently active application environment
    show-default Show the default application environment
    switch       Switch to a different application environment

  GLOBAL OPTIONS:

    -h, --help 
        Display help documentation

    --version 
        Display version information
~~~

## List Available Environments

The available environments can be found with the `avail` command:

~~~
$ flight env avail
~~~

| Name     | Summary                                                  |
|----------|----------------------------------------------------------|
| gridware | Tool for installing and managing scientific applications |
| &#9;     | and libraries.                                           |
| &#9;     | &#9;                                                     |
| &#9;     |  `>` https://gridware.alces-flight.com/                  |
| &#9;     | &#9;                                                     |
| modules  | Provides dynamic modification of a user's environment.   |
| &#9;     | &#9;                                                     |
| &#9;     |  `>` http://modules.sourceforge.net/                     |
| ...      | ...                                                      |

## Install, List and Remove an Environment

An environment needs to be installed before it can be used. This is done using the
`create` command. You will need log out and in again before activating the environment.

~~~
$ flight env create gridware
Creating environment gridware@default
   > OK Verifying prerequisites
   > OK Fetching prerequisite (tcl) 
   > OK Extracting prerequisite (tcl) 
   > OK Building prerequisite (tcl)
   > OK Installing prerequisite (tcl) 
   > OK Fetching prerequisite (modules) 
   > OK Extracting prerequisite (modules) 
   > OK Building prerequisite (modules) 
   > OK Installing prerequisite (modules) 
   > OK Fetching prerequisite (gridware) 
   > OK Extracting prerequisite (gridware) 
   > OK Installing prerequisite (gridware) 
   > OK Configuring repo: main 
   > OK Creating environment (gridware@default) 
Environment gridware@default has been created
~~~

The environments which have been installed can be retrieved with the `list` command:

~~~
$ flight env list
~~~

| Name             | Scope |
|------------------|-------|
| gridware@default | user  |

The environment can be removed with the `purge` command:

~~~
$ flight env purge gridware@default
Purge environment gridware@default? yes
Purging environment gridware@default
   > OK Deleting environment tree (gridware@default) 
Environment gridware@default has been purge

$ flight env list
No configured environments.
~~~

## Temporarily Enable/Disable an Environment

An environment can be temporarily enabled using the `activate` command. This will enable
the environment within the current shell but will not affect the default.

~~~
$ flight env activate gridware
$ gridware --help
NAME:
  
  gridware
...
~~~
NOTE: The environment will need to be recreated if it was purged in the previous step

To retrieve the currently active environment:

~~~
$ flight env show-active
gridware@default
~~~

The environment can be disabled using the `deactivate` command:

~~~
$ flight env deactivate
$ gridware --help
-bash: gridware: command not found
~~~

## Permanently Enable an Environment

An environment can be permanently set as the login environment for the
current user with the `set-default` command:

~~~
$ flight env set-default gridware
Default environment set to: gridware@default
~~~

By executing the command as root, a system-wide default login environment
can be set using the `--system` option:

~~~
$ sudo /opt/flight/bin/flight env set-default gridware --system
Default system-wide environment set to: gridware@default
~~~

Users can opt in to using the system-wide default login environment
with the `--use-system` option:

~~~
$ flight env set-default --use-system
Default login environment has been set to the system-wide default.
Currently set to: gridware@default
~~~

## Remove the Default Login Environment

The default login environment can be removed with the
`remove-default` command:

~~~
$ flight env remove-default
Default environment removed
~~~

Note that this will also opt users out of using the system-wide default
login environment.

By executing the command as root, the system-wide default environment
can be removed using the `--system` option:

~~~
$ sudo /opt/flight/bin/flight env remove-default --system
System-wide default environment removed
~~~
