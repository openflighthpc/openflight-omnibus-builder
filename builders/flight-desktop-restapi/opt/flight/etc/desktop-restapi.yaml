#==============================================================================
# Copyright (C) 2021-present Alces Flight Ltd.
#
# This file is part of FlightDesktopRestAPI.
#
# This program and the accompanying materials are made available under
# the terms of the Eclipse Public License 2.0 which is available at
# <https://www.eclipse.org/legal/epl-2.0>, or alternative license
# terms made available by Alces Flight Ltd - please direct inquiries
# about licensing to licensing@alces-flight.com.
#
# FlightDesktopRestAPI is distributed in the hope that it will be useful, but
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, EITHER EXPRESS OR
# IMPLIED INCLUDING, WITHOUT LIMITATION, ANY WARRANTIES OR CONDITIONS
# OF TITLE, NON-INFRINGEMENT, MERCHANTABILITY OR FITNESS FOR A
# PARTICULAR PURPOSE. See the Eclipse Public License 2.0 for more
# details.
#
# You should have received a copy of the Eclipse Public License 2.0
# along with FlightDesktopRestAPI. If not, see:
#
#  https://opensource.org/licenses/EPL-2.0
#
# For more information on FlightDesktopRestAPI, please visit:
# https://github.com/openflighthpc/flight-desktop-restapi
#===============================================================================

# =============================================================================
# Bind Address
# Specify which pam configuration file should be used to authenticate requests.
# It should correlate to a filename stored within /etc/pam.d
#
# The environment variable flight_DESKTOP_RESTAPI_bind_address takes precedence.
# =============================================================================
# bind_address: tcp://127.0.0.1:915

# =============================================================================
# CORS Domain
# Enable cross origin resource sharing from the given domain. CORS is disabled
# by default
#
# The environment variable flight_DESKTOP_RESTAPI_cors_domain takes precedence.
# =============================================================================
# cors_domain:

# =============================================================================
# Refresh Rates
# The `refresh_rate` is used to control how frequently the available desktops
# are checked and verified. This check will be made at intervals given by the
# 'refresh_rate'.
#
# The environment variable flight_DESKTOP_RESTAPI_refresh_rate takes
# precedence.
# =============================================================================
# refresh_rate: 3600

# =============================================================================
# Verify Sleep
# How long in seconds to wait between verifying each desktop `verify_sleep`.
# The desktop types are periodically verified.  This setting is used to add a
# slight delay between verifying them to prevent the API from becomining
# unresponsive.
#
# The environment variable flight_DESKTOP_RESTAPI_verify_sleep takes
# precedence.
# =============================================================================
# verify_sleep: 0.5

# =============================================================================
# Desktop Command
#
# The command to used to run the Flight Desktop executable.
#
# The default value uses the 'flight_ROOT' environment variable.  Expanding
# environment variables is only supported when using the default value.  You
# will need to use explicit full path if you override this value.
#
# The environment variable flight_DESKTOP_RESTAPI_desktop_command takes
# precedence.
# =============================================================================
# desktop_command: ${flight_ROOT}/bin/flight desktop

# ==============================================================================
# Command PATH
# The PATH the desktop command will be executed with.
#
# The environment variable flight_DESKTOP_RESTAPI_command_path takes precedence.
# ==============================================================================
# command_path: /usr/sbin:/usr/bin:/sbin:/bin

# ==============================================================================
# Command Timeout
# The maximum time to wait when running a desktop command. Commands which
# take longer then this period will be terminated.
#
# The environment variable flight_DESKTOP_RESTAPI_command_timeout takes precedence.
# ==============================================================================
# command_timeout: 30

# ==============================================================================
# SSH Connection Timeout
#
# The maximum time to wait to establish an SSH connection to run a desktop
# command on a remote host.
#
# The environment variable flight_DESKTOP_RESTAPI_ssh_connection_timeout takes
# precedence.
# ==============================================================================
# ssh_connection_timeout: 5

# ==============================================================================
# Remote Hosts
#
# A list of remote hosts that Flight Desktop RestAPI will start sessions on.
# Flight Desktop RestAPI will SSH as the requesting user into one of the hosts
# and run the Flight Desktop CLI to start (and manage) the desktop session.
#
# This requires 
#
# 1. Passwordless SSH access to be setup for each user of Flight Desktop
#    RestAPI on each host.  The passwordless SSH access will use the key
#    specified in ssh_private_key_path.  The public key specified by
#    ssh_public_key_path will be automatically installed for each user.
# 2. The Flight Desktop CLI to be installed on each of the remote hosts.
#
# Additionally the following assumptions are made:
#
# 1. Each user's home directory is shared across each remote host *and*
#    localhost (i.e., the host that Flight Desktop RestAPI is running on).
# 2. The same set of desktops have been prepared on each of the remote hosts.
# 3. Either (a) the same set of desktops have been prepared on localhost; or
#    (b) the config variable verified_desktops has been set correctly.
#
# The host running Flight Desktop RestAPI can appear in this list.
#
# If this list is empty, all sessions will be started on localhost.  In this
# case there is no need for passwordless SSH to be setup.
#
# The environment variable flight_DESKTOP_RESTAPI_remote_hosts takes
# precedence and is interpreted as a space separated list of hostnames.
# ==============================================================================
# remote_hosts: []

# ============================================================================== 
# SSH Private Key Path
#
# The path to the private SSH key that is used for passwordless SSH access to
# the remote hosts.
#
# Relative paths are expanded according to the "Relative path expansion" rules
# described below.
#
# The environment variable flight_DESKTOP_RESTAPI_ssh_private_key_path takes
# precedence.
# ============================================================================== 
# ssh_private_key_path: "etc/desktop-restapi/id_rsa"

# ============================================================================== 
# SSH Public Key Path
#
# The path to the public SSH key that is automatically installed for
# passwordless SSH access to the remote hosts.
#
# Relative paths are expanded according to the "Relative path expansion" rules
# described below.
#
# The environment variable flight_DESKTOP_RESTAPI_ssh_public_key_path takes
# precedence.
# ============================================================================== 
# ssh_public_key_path: "etc/desktop-restapi/id_rsa.pub"

# ============================================================================== 
# Verified Desktops
#
# The list of desktop which are known to have been prepared/verified.
#
# If this list is empty, the verfied desktops will be determined by running
# Flight Desktop on localhost to get the list.  If remote hosts have been
# enabled, this list may or may not match the desktops that have been prepared
# on the remote hosts.
#
# The environment variable flight_DESKTOP_RESTAPI_verified_desktops takes
# precedence and is interpreted as a space separated list of desktop names.
# ============================================================================== 
# verified_desktops: []

# =============================================================================
# Shared Secret Path
# The path to the file containing the shared secret used to verify the login
# credentials.
#
# Relative paths are expanded according to the "Relative path expansion" rules
# described below.
#
# The environment variable flight_DESKTOP_RESTAPI_shared_secret_path takes
# precedence.
# =============================================================================
# shared_secret_path: etc/shared-secret.conf

# =============================================================================
# SSO Cookie Domain
# The name of cookie used to store the login credentials
#
# The environment variable flight_DESKTOP_RESTAPI_sso_cookie_domain takes
# precedence.
# =============================================================================
# sso_cookie_name: flight_login

# ==============================================================================
# Log Path
# The file the logger will write to. It will write to standard error if
# omitted.
#
# Relative paths are expanded according to the "Relative path expansion" rules
# described below.
#
# The environment variable flight_DESKTOP_RESTAPI_log_path takes precedence.
# ==============================================================================
# log_path: /dev/stdout

# =============================================================================
# Log Level
# Specify which level of logging should be used. The supported values are:
# fatal, error, warn, info, or debug
#
# The environment variable flight_DESKTOP_RESTAPI_log_level takes precedence.
# =============================================================================
# log_level: info

# =============================================================================
# Available XRandR Geometries
# Specifies the available geometries for the desktops. This maybe an array or
# comma separated string.
#
# The environment variable flight_DESKTOP_RESTAPI_xrandr_geometries takes
# precedence and is interpreted as a comma separated list of geometries.
#
# NOTE: These geometries will need to be available on all desktops which are
#       accessible via flight-desktop.
# =============================================================================
# xrandr_geometries:
#   - 1920x1200
#   - 1920x1080
#   - 1600x1200
#   - 1680x1050
#   - 1400x1050
#   - 1360x768
#   - 1280x1024
#   - 1280x960
#   - 1280x800
#   - 1280x720
#   - 1024x768
#   - 800x600
#   - 640x480

# ==============================================================================
# Relative path expansion rules
#
# Relative paths, where supported, are expanded in one of two ways:
#
# 1. If Flight Desktop RestAPI was installed from the OpenFlight package repos,
#    they will be expanded from the value of the `flight_ROOT` environment
#    variable.
# 2. Otherwise they will be expanded from the Flight Desktop RestAPI
#    installation directory.
#
# More details can be found at
# https://github.com/openflighthpc/flight-desktop-restapi/blob/master/docs/environment-modes.md
# ==============================================================================
